# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: raft.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='raft.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\nraft.proto\"6\n\x11ReplicateFileInfo\x12\x11\n\tfileChunk\x18\x01 \x01(\t\x12\x0e\n\x06\x64\x63\x41\x64\x64r\x18\x02 \x01(\t\"?\n\tHeartbeat\x12\n\n\x02id\x18\x01 \x01(\t\x12\x13\n\x0b\x63urrentTerm\x18\x02 \x01(\x03\x12\x11\n\x03log\x18\x03 \x01(\x0b\x32\x04.Log\"*\n\x07VoteReq\x12\n\n\x02id\x18\x01 \x01(\t\x12\x13\n\x0b\x63urrentTerm\x18\x02 \x01(\x03\"*\n\x04Vote\x12\r\n\x05voted\x18\x01 \x01(\x08\x12\x13\n\x0b\x63urrentTerm\x18\x02 \x01(\x03\"\x92\x01\n\x05\x41\x63kHB\x12\x0b\n\x03\x61\x63k\x18\x01 \x01(\t\x12\r\n\x05\x64\x63\x41\x63k\x18\x02 \x03(\t\x12(\n\tmaxChunks\x18\x03 \x03(\x0b\x32\x15.AckHB.MaxChunksEntry\x12\x11\n\tsizeAvail\x18\x04 \x01(\x03\x1a\x30\n\x0eMaxChunksEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"\x15\n\x06\x44\x63List\x12\x0b\n\x03\x64\x63s\x18\x01 \x03(\t\"\x90\x02\n\x03Log\x12\"\n\x07\x66ileLog\x18\x01 \x03(\x0b\x32\x11.Log.FileLogEntry\x12&\n\tmaxChunks\x18\x02 \x03(\x0b\x32\x13.Log.MaxChunksEntry\x12\"\n\x07\x64\x63Sizes\x18\x03 \x03(\x0b\x32\x11.Log.DcSizesEntry\x1a\x37\n\x0c\x46ileLogEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x16\n\x05value\x18\x02 \x01(\x0b\x32\x07.DcList:\x02\x38\x01\x1a\x30\n\x0eMaxChunksEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a.\n\x0c\x44\x63SizesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"\x07\n\x05\x45mpty2\xd0\x01\n\x11raftImplemetation\x12\x1e\n\x0bRequestVote\x12\x08.VoteReq\x1a\x05.Vote\x12\x1f\n\rAppendEntries\x12\x06.Empty\x1a\x06.Empty\x12#\n\rSendHeartBeat\x12\n.Heartbeat\x1a\x06.AckHB\x12+\n\rReplicateFile\x12\x12.ReplicateFileInfo\x1a\x06.Empty\x12(\n\nDeleteFile\x12\x12.ReplicateFileInfo\x1a\x06.Emptyb\x06proto3')
)




_REPLICATEFILEINFO = _descriptor.Descriptor(
  name='ReplicateFileInfo',
  full_name='ReplicateFileInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fileChunk', full_name='ReplicateFileInfo.fileChunk', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dcAddr', full_name='ReplicateFileInfo.dcAddr', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14,
  serialized_end=68,
)


_HEARTBEAT = _descriptor.Descriptor(
  name='Heartbeat',
  full_name='Heartbeat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Heartbeat.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currentTerm', full_name='Heartbeat.currentTerm', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='log', full_name='Heartbeat.log', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=70,
  serialized_end=133,
)


_VOTEREQ = _descriptor.Descriptor(
  name='VoteReq',
  full_name='VoteReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='VoteReq.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currentTerm', full_name='VoteReq.currentTerm', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=135,
  serialized_end=177,
)


_VOTE = _descriptor.Descriptor(
  name='Vote',
  full_name='Vote',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='voted', full_name='Vote.voted', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currentTerm', full_name='Vote.currentTerm', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=179,
  serialized_end=221,
)


_ACKHB_MAXCHUNKSENTRY = _descriptor.Descriptor(
  name='MaxChunksEntry',
  full_name='AckHB.MaxChunksEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='AckHB.MaxChunksEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='AckHB.MaxChunksEntry.value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=322,
  serialized_end=370,
)

_ACKHB = _descriptor.Descriptor(
  name='AckHB',
  full_name='AckHB',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ack', full_name='AckHB.ack', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dcAck', full_name='AckHB.dcAck', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maxChunks', full_name='AckHB.maxChunks', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sizeAvail', full_name='AckHB.sizeAvail', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ACKHB_MAXCHUNKSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=224,
  serialized_end=370,
)


_DCLIST = _descriptor.Descriptor(
  name='DcList',
  full_name='DcList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dcs', full_name='DcList.dcs', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=372,
  serialized_end=393,
)


_LOG_FILELOGENTRY = _descriptor.Descriptor(
  name='FileLogEntry',
  full_name='Log.FileLogEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Log.FileLogEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='Log.FileLogEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=515,
  serialized_end=570,
)

_LOG_MAXCHUNKSENTRY = _descriptor.Descriptor(
  name='MaxChunksEntry',
  full_name='Log.MaxChunksEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Log.MaxChunksEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='Log.MaxChunksEntry.value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=322,
  serialized_end=370,
)

_LOG_DCSIZESENTRY = _descriptor.Descriptor(
  name='DcSizesEntry',
  full_name='Log.DcSizesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Log.DcSizesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='Log.DcSizesEntry.value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=622,
  serialized_end=668,
)

_LOG = _descriptor.Descriptor(
  name='Log',
  full_name='Log',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fileLog', full_name='Log.fileLog', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maxChunks', full_name='Log.maxChunks', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dcSizes', full_name='Log.dcSizes', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_LOG_FILELOGENTRY, _LOG_MAXCHUNKSENTRY, _LOG_DCSIZESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=396,
  serialized_end=668,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=670,
  serialized_end=677,
)

_HEARTBEAT.fields_by_name['log'].message_type = _LOG
_ACKHB_MAXCHUNKSENTRY.containing_type = _ACKHB
_ACKHB.fields_by_name['maxChunks'].message_type = _ACKHB_MAXCHUNKSENTRY
_LOG_FILELOGENTRY.fields_by_name['value'].message_type = _DCLIST
_LOG_FILELOGENTRY.containing_type = _LOG
_LOG_MAXCHUNKSENTRY.containing_type = _LOG
_LOG_DCSIZESENTRY.containing_type = _LOG
_LOG.fields_by_name['fileLog'].message_type = _LOG_FILELOGENTRY
_LOG.fields_by_name['maxChunks'].message_type = _LOG_MAXCHUNKSENTRY
_LOG.fields_by_name['dcSizes'].message_type = _LOG_DCSIZESENTRY
DESCRIPTOR.message_types_by_name['ReplicateFileInfo'] = _REPLICATEFILEINFO
DESCRIPTOR.message_types_by_name['Heartbeat'] = _HEARTBEAT
DESCRIPTOR.message_types_by_name['VoteReq'] = _VOTEREQ
DESCRIPTOR.message_types_by_name['Vote'] = _VOTE
DESCRIPTOR.message_types_by_name['AckHB'] = _ACKHB
DESCRIPTOR.message_types_by_name['DcList'] = _DCLIST
DESCRIPTOR.message_types_by_name['Log'] = _LOG
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ReplicateFileInfo = _reflection.GeneratedProtocolMessageType('ReplicateFileInfo', (_message.Message,), dict(
  DESCRIPTOR = _REPLICATEFILEINFO,
  __module__ = 'raft_pb2'
  # @@protoc_insertion_point(class_scope:ReplicateFileInfo)
  ))
_sym_db.RegisterMessage(ReplicateFileInfo)

Heartbeat = _reflection.GeneratedProtocolMessageType('Heartbeat', (_message.Message,), dict(
  DESCRIPTOR = _HEARTBEAT,
  __module__ = 'raft_pb2'
  # @@protoc_insertion_point(class_scope:Heartbeat)
  ))
_sym_db.RegisterMessage(Heartbeat)

VoteReq = _reflection.GeneratedProtocolMessageType('VoteReq', (_message.Message,), dict(
  DESCRIPTOR = _VOTEREQ,
  __module__ = 'raft_pb2'
  # @@protoc_insertion_point(class_scope:VoteReq)
  ))
_sym_db.RegisterMessage(VoteReq)

Vote = _reflection.GeneratedProtocolMessageType('Vote', (_message.Message,), dict(
  DESCRIPTOR = _VOTE,
  __module__ = 'raft_pb2'
  # @@protoc_insertion_point(class_scope:Vote)
  ))
_sym_db.RegisterMessage(Vote)

AckHB = _reflection.GeneratedProtocolMessageType('AckHB', (_message.Message,), dict(

  MaxChunksEntry = _reflection.GeneratedProtocolMessageType('MaxChunksEntry', (_message.Message,), dict(
    DESCRIPTOR = _ACKHB_MAXCHUNKSENTRY,
    __module__ = 'raft_pb2'
    # @@protoc_insertion_point(class_scope:AckHB.MaxChunksEntry)
    ))
  ,
  DESCRIPTOR = _ACKHB,
  __module__ = 'raft_pb2'
  # @@protoc_insertion_point(class_scope:AckHB)
  ))
_sym_db.RegisterMessage(AckHB)
_sym_db.RegisterMessage(AckHB.MaxChunksEntry)

DcList = _reflection.GeneratedProtocolMessageType('DcList', (_message.Message,), dict(
  DESCRIPTOR = _DCLIST,
  __module__ = 'raft_pb2'
  # @@protoc_insertion_point(class_scope:DcList)
  ))
_sym_db.RegisterMessage(DcList)

Log = _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), dict(

  FileLogEntry = _reflection.GeneratedProtocolMessageType('FileLogEntry', (_message.Message,), dict(
    DESCRIPTOR = _LOG_FILELOGENTRY,
    __module__ = 'raft_pb2'
    # @@protoc_insertion_point(class_scope:Log.FileLogEntry)
    ))
  ,

  MaxChunksEntry = _reflection.GeneratedProtocolMessageType('MaxChunksEntry', (_message.Message,), dict(
    DESCRIPTOR = _LOG_MAXCHUNKSENTRY,
    __module__ = 'raft_pb2'
    # @@protoc_insertion_point(class_scope:Log.MaxChunksEntry)
    ))
  ,

  DcSizesEntry = _reflection.GeneratedProtocolMessageType('DcSizesEntry', (_message.Message,), dict(
    DESCRIPTOR = _LOG_DCSIZESENTRY,
    __module__ = 'raft_pb2'
    # @@protoc_insertion_point(class_scope:Log.DcSizesEntry)
    ))
  ,
  DESCRIPTOR = _LOG,
  __module__ = 'raft_pb2'
  # @@protoc_insertion_point(class_scope:Log)
  ))
_sym_db.RegisterMessage(Log)
_sym_db.RegisterMessage(Log.FileLogEntry)
_sym_db.RegisterMessage(Log.MaxChunksEntry)
_sym_db.RegisterMessage(Log.DcSizesEntry)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'raft_pb2'
  # @@protoc_insertion_point(class_scope:Empty)
  ))
_sym_db.RegisterMessage(Empty)


_ACKHB_MAXCHUNKSENTRY.has_options = True
_ACKHB_MAXCHUNKSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_LOG_FILELOGENTRY.has_options = True
_LOG_FILELOGENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_LOG_MAXCHUNKSENTRY.has_options = True
_LOG_MAXCHUNKSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_LOG_DCSIZESENTRY.has_options = True
_LOG_DCSIZESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))

_RAFTIMPLEMETATION = _descriptor.ServiceDescriptor(
  name='raftImplemetation',
  full_name='raftImplemetation',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=680,
  serialized_end=888,
  methods=[
  _descriptor.MethodDescriptor(
    name='RequestVote',
    full_name='raftImplemetation.RequestVote',
    index=0,
    containing_service=None,
    input_type=_VOTEREQ,
    output_type=_VOTE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AppendEntries',
    full_name='raftImplemetation.AppendEntries',
    index=1,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendHeartBeat',
    full_name='raftImplemetation.SendHeartBeat',
    index=2,
    containing_service=None,
    input_type=_HEARTBEAT,
    output_type=_ACKHB,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ReplicateFile',
    full_name='raftImplemetation.ReplicateFile',
    index=3,
    containing_service=None,
    input_type=_REPLICATEFILEINFO,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteFile',
    full_name='raftImplemetation.DeleteFile',
    index=4,
    containing_service=None,
    input_type=_REPLICATEFILEINFO,
    output_type=_EMPTY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_RAFTIMPLEMETATION)

DESCRIPTOR.services_by_name['raftImplemetation'] = _RAFTIMPLEMETATION

# @@protoc_insertion_point(module_scope)
